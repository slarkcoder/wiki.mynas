import{_ as e,c as i,a2 as a,o as t}from"./chunks/framework.eme8ZeBJ.js";const k=JSON.parse('{"title":"设置交换机模式","description":"","frontmatter":{},"headers":[],"relativePath":"basic/bridge_network.md","filePath":"basic/bridge_network.md","lastUpdated":1738680102000}'),p={name:"basic/bridge_network.md"};function d(h,s,o,n,l,c){return t(),i("div",null,s[0]||(s[0]=[a(`<h1 id="设置交换机模式" tabindex="-1">设置交换机模式 <a class="header-anchor" href="#设置交换机模式" aria-label="Permalink to &quot;设置交换机模式&quot;">​</a></h1><p><img src="https://img.slarker.me/wiki/pexels-brett-sayles-288122_SoctoD.jpg" alt="pexels-brett-sayles-288122_SoctoD"></p><h2 id="最常见的网络拓扑" tabindex="-1">最常见的网络拓扑 <a class="header-anchor" href="#最常见的网络拓扑" aria-label="Permalink to &quot;最常见的网络拓扑&quot;">​</a></h2><p>大部分情况下，我们的网络拓扑应该是这样的：</p><p><img src="https://img.slarker.me/wiki/e1765ab5860c40978bf1ae08700c531d.webp" alt=""></p><p>电脑和 NAS 都通过网线直连路由器，或者直连路由器下面的交换机。</p><p>使用这种最常见的网络拓扑，如果电脑有 2.5G/10G 网口，NAS 也有 2.5G/10G 网口，想让电脑和 NAS 之间可以跑满 2.5G/10G，那就要求路由器或者交换机至少需要两个 2.5G/10G 网口，分别把电脑和 NAS 的 2.5G/10G 网口插到路由器或者交换机的 2.5G/10G 网口，这样才能确保传输速度可以跑满 2.5G/10G 带宽。</p><h2 id="交换机模式" tabindex="-1">交换机模式 <a class="header-anchor" href="#交换机模式" aria-label="Permalink to &quot;交换机模式&quot;">​</a></h2><p>虽然上面这种网络拓扑最常见，也最简单，但对设备要求比较高，比如路由器或者交换机必须至少有两个 2.5G/10G 网口。目前带多个 2.5G 网口的交换机很多，也很便宜，但带多个 10G 网口的路由器或者交换机就比较贵，有没有更简单的办法来满足需求呢？</p><p>当然是有的，如果你的 NAS 有多个网口，可以在 NAS 上设置桥接，把 NAS 的 2.5G/10G 网口当成交换机来用，这样你的电脑就可以直接把 2.5G/10G 网口接到 NAS 的 2.5 G/10G 网口，既可以正常通过 NAS 来上网，也可以实现传输文件跑满带宽。 具体网络拓扑如下：</p><p><img src="https://img.slarker.me/wiki/a367f2341ffd40769261c92ba3976726.webp" alt=""></p><p>上图中的 NAS 具有一个千兆口，一个 2.5G/10G 网口，设置好交换机模式之后，把千兆口接到路由器上，2.5G/10G 网口和 <code>电脑 2</code> 的 2.5/10G 网口相连，这样电脑 2 就可以通过 NAS 上网，同时和 NAS 之间的传输速度也能达到 2.5G/10G 速度。</p><h2 id="群晖" tabindex="-1">群晖 <a class="header-anchor" href="#群晖" aria-label="Permalink to &quot;群晖&quot;">​</a></h2><p>以下面这台带千兆 + 双万兆网口的群晖为例，先把千兆网口接到路由器上。</p><h3 id="启用-open-vswitch" tabindex="-1">启用 Open vSwitch <a class="header-anchor" href="#启用-open-vswitch" aria-label="Permalink to &quot;启用 Open vSwitch&quot;">​</a></h3><p>打开 <code>控制面板</code> -&gt; <code>网络</code> -&gt; <code>网络界面</code> -&gt; <code>管理</code> -&gt; <code>Open vSwitch 设置</code>，勾选 <code>启用 Open vSwitch</code> 并确定。</p><p><img src="https://img.slarker.me/wiki/XPjbNQ_D6FmC7.png" alt="XPjbNQ_D6FmC7"></p><h3 id="查看当前网络" tabindex="-1">查看当前网络 <a class="header-anchor" href="#查看当前网络" aria-label="Permalink to &quot;查看当前网络&quot;">​</a></h3><p>在 <code>控制面板</code> -&gt; <code>网络</code> -&gt; <code>网络界面</code> 中可以看到当前的网络连接状态。</p><p><img src="https://img.slarker.me/wiki/upi5hb4s.oxh_KWdA4l.png" alt="upi5hb4s.oxh_KWdA4l"></p><p>前面已经说了，这台 NAS 上的网卡只有三个，分别是千兆和双口万兆。目前 NAS 只有千兆网卡连接了路由器，所以显示 <code>已联机</code> 的 <code>局域网 1</code> 就是千兆网卡，显示 <code>尚未联机</code> 的 <code>局域网 2</code> 和 <code>局域网 3</code> 就是两个万兆网卡。</p><h3 id="linux-中的网卡对应关系" tabindex="-1">Linux 中的网卡对应关系 <a class="header-anchor" href="#linux-中的网卡对应关系" aria-label="Permalink to &quot;Linux 中的网卡对应关系&quot;">​</a></h3><p><a href="/synology/ssh.html">使用 SSH 登录群晖</a>，并切换到 <code>root</code> 用户，使用下面的命令查看当前的网络配置：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ifconfig</span></span></code></pre></div><p>下面这张图是启用 <code>Open vSwitch</code> 之前的网络配置：</p><p><img src="https://img.slarker.me/wiki/1mlkyale.ev2_qnqpGe.png" alt="1mlkyale.ev2_qnqpGe"></p><p>下面这张图是启用 <code>Open vSwitch</code> 之后的网络配置：</p><p><img src="https://img.slarker.me/wiki/FMTgqF_epmJyh.png" alt="FMTgqF_epmJyh"></p><p>通过网卡 IP 可以判断，上面两张图中，eth0 就是千兆网卡，eth1 和 eth2 就是两个万兆网卡。对比可以看到，启用 <code>Open vSwitch</code> 之前，NAS 直接通过千兆物理网卡上网。启用 <code>Open vSwitch</code> 之后，系统为每个物理网卡分别生成并绑定了一个虚拟的交换机（<code>ovs_eth0</code>，<code>ovs_eth1</code>，<code>ovs_eth2</code>），而现在的联网方式变成了通过这个虚拟交换机 <code>ovs_eth0</code> 上网。</p><p>网卡、虚拟交换机之间的对应关系如下表：</p><table tabindex="0"><thead><tr><th><code>网络界面</code> 中显示的网络</th><th style="text-align:center;">ifconfig 命令显示的对应网卡</th><th style="text-align:center;">绑定的虚拟交换机</th><th style="text-align:right;">物理网卡</th></tr></thead><tbody><tr><td>局域网 1</td><td style="text-align:center;">eth0</td><td style="text-align:center;">ovs_eth0</td><td style="text-align:right;">千兆网卡</td></tr><tr><td>局域网 2</td><td style="text-align:center;">eth1</td><td style="text-align:center;">ovs_eth1</td><td style="text-align:right;">万兆网卡 1</td></tr><tr><td>局域网 3</td><td style="text-align:center;">eth2</td><td style="text-align:center;">ovs_eth2</td><td style="text-align:right;">万兆网卡 2</td></tr></tbody></table><h3 id="设置虚拟交换机" tabindex="-1">设置虚拟交换机 <a class="header-anchor" href="#设置虚拟交换机" aria-label="Permalink to &quot;设置虚拟交换机&quot;">​</a></h3><p>我们需要做的就是将 <code>万兆网卡 1</code> 和 <code>万兆网卡 2</code> 绑定的虚拟交换机删掉，然后把 <code>万兆网卡 1</code> 和 <code>万兆网卡 2</code> 都添加到千兆网卡绑定的虚拟交换机 <code>ovs_eth0</code> 中，这样这三个网口就都可以通过 <code>ovs_eth0</code> 这个虚拟交换机来上网，也就实现了交换机模式。</p><p>使用下面的命令来删除绑定的虚拟交换机：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除万兆网卡 1 绑定的虚拟交换机 ovs_eth1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ovs-vsctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> del-br</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ovs_eth1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除万兆网卡 2 绑定的虚拟交换机 ovs_eth2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ovs-vsctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> del-br</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ovs_eth2</span></span></code></pre></div><p>删除之后可以重新使用 <code>ifconfig</code> 查看下当前的网络配置：</p><p><img src="https://img.slarker.me/wiki/z1ncz00g.qok_X6wJQM.png" alt="z1ncz00g.qok_X6wJQM"></p><p>可以看到，<code>ovs_eth1</code> 和 <code>ovs_eth2</code> 已经被删除了，下面我们把 <code>eth1</code> 和 <code>eth2</code> 这两个万兆网卡添加到 <code>ovs_eth0</code> 中：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ovs-vsctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add-port</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ovs_eth0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eth1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ovs-vsctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add-port</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ovs_eth0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eth2</span></span></code></pre></div><p>添加好之后，使用下面的命令来查看虚拟交换机配置：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ovs-vsctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> show</span></span></code></pre></div><p>可以看到 <code>ovs_eth0</code> 中已经包含了 <code>eth0</code>，<code>eth1</code>，<code>eth2</code> 这三个网卡，说明交换机模式已经设置成功了。</p><p><img src="https://img.slarker.me/wiki/rzeksrx1.zvi_REiPLE.png" alt="rzeksrx1.zvi_REiPLE"></p><p>现在你就可以把电脑直接接到 NAS 的万兆网卡上，电脑使用 <code>DHCP</code> 的模式就可以自动从路由器获取到 IP 上网。在电脑的网络属性中，也可以看到网络的链接速度是 <code>10G</code>。</p><p>最后，用一张图来总结下涉及到的操作。</p><p><img src="https://img.slarker.me/wiki/bb9457eaa3cf47469ed4cd9ff1e655a5.png" alt=""></p><h3 id="开机脚本" tabindex="-1">开机脚本 <a class="header-anchor" href="#开机脚本" aria-label="Permalink to &quot;开机脚本&quot;">​</a></h3><p>由于群晖重启后，会将上面的设置都恢复成默认的 <code>Open vSwitch</code> 绑定关系。如果上面的操作都确定没问题，我们这里需要添加一个开机脚本来自动完成上面的设置。</p><p>在 <code>控制面板</code> -&gt; <code>任务计划</code> -&gt; <code>新增</code> -&gt; <code>触发的任务</code> -&gt; <code>用户定义的脚本</code> 中设置任务名称为 <code>ovs</code>，切换用户账号为 <code>root</code> 用户。</p><p><img src="https://img.slarker.me/wiki/xns9xs_7h9Fqn.png" alt="xns9xs_7h9Fqn"></p><p>切换到任务设置，填写上面设置虚拟交换机的命令：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sleep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 60</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ovs-vsctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> del-br</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ovs_eth1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ovs-vsctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> del-br</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ovs_eth2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ovs-vsctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add-port</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ovs_eth0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eth1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ovs-vsctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add-port</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ovs_eth0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eth2</span></span></code></pre></div><p><img src="https://img.slarker.me/wiki/3voWYT_5I1Xcm.png" alt="3voWYT_5I1Xcm"></p><p>设置好之后点击 <code>确定</code>，出现系统提示再次 <code>确定</code> 之后输入密码提交。</p><p><img src="https://img.slarker.me/wiki/x95OJE_KboTMf.png" alt="x95OJE_KboTMf"></p><p>可以重启系统测试下是否 OK。</p><h2 id="fnos" tabindex="-1">fnOS <a class="header-anchor" href="#fnos" aria-label="Permalink to &quot;fnOS&quot;">​</a></h2><p>fnOS 设置交换机模式和群晖的思路基本一样，但是操作更简单。</p><p>以板载双 2.5G 网口的 N100 主板为例，在 <code>网络设置</code> 中打开当前连接到路由器的网口（enp2s0）的 OVS 开关（打开虚拟交换机 OVS）。</p><p><img src="https://img.slarker.me/wiki/20250204223018405.webp" alt=""></p><p>于是 <code>网口 1</code> 就由 <code>enp2s0</code> 变成了 <code>enp2s0-ovs</code>，之后 <a href="/fnos/ssh.html">使用 SSH 登录</a> fnOS，并切换到 <code>root</code> 用户。使用 <code>ovs-vsctl</code> 命令，将另一个网口 <code>enp3s0</code> 添加到 <code>enp2s0-ovs</code> 就可以了，非常简单！</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看网口配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ifconfig</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 将 enp3s0 添加到 enp2s0-ovs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ovs-vsctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add-port</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enp2s0-ovs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enp3s0</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看虚拟交换机</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ovs-vsctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> show</span></span></code></pre></div><p><img src="https://img.slarker.me/wiki/20250204223740447.webp" alt=""></p><h2 id="unraid" tabindex="-1">Unraid <a class="header-anchor" href="#unraid" aria-label="Permalink to &quot;Unraid&quot;">​</a></h2><p>Unraid 的设置方法比较简单，默认情况下，Unraid 会将所有网口都绑定到 eth0 接口：</p><p><img src="https://img.slarker.me/wiki/utvpGD_5Ow2NU.png" alt="utvpGD_5Ow2NU"></p><p>这里把 <code>启用绑定</code> 改为 <code>否</code>，<code>启用桥接</code> 改为 <code>是</code>，在 <code>桥接其成员 br0</code> 勾选所有网口：</p><p><img src="https://img.slarker.me/wiki/CqmR8F_Bm2cnU.png" alt="CqmR8F_Bm2cnU"></p><p>然后点击应用即可，设置生效后，如果 eth0 接口默认是 DHCP 自动获取 IP，此时 IP 地址可能会有变化，可以到路由器后台查找新的 IP。</p><h2 id="pve" tabindex="-1">PVE <a class="header-anchor" href="#pve" aria-label="Permalink to &quot;PVE&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">警告</p><p>请先确认你的网口处于闲置状态，没有被任何虚拟机使用。</p></div><p>如果你的 NAS 有多个网口，想在 <code>PVE</code> 里将其它闲置网口设置为交换机使用，可以在 <code>PVE</code> 的 <code>网络</code> 中，编辑 <code>vmbr0</code>，将闲置的网口都加到 <code>vmbr0</code> 的 <code>桥接端口</code> 中，点击 <code>OK</code>，并应用配置，具体如下图所示。</p><blockquote><p>注意：端口之间以空格作为分割。</p></blockquote><p><img src="https://img.slarker.me/wiki/740d4e6bb2534edcbba8c8a49c0d9d34.webp" alt=""></p>`,74)]))}const g=e(p,[["render",d]]);export{k as __pageData,g as default};
