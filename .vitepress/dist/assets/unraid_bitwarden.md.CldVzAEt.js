import{_ as a,c as r,a2 as t,o as i}from"./chunks/framework.eme8ZeBJ.js";const m=JSON.parse('{"title":"开源的密码管理器 - Bitwarden","description":"","frontmatter":{},"headers":[],"relativePath":"unraid/bitwarden.md","filePath":"unraid/bitwarden.md","lastUpdated":1739465368000}'),d={name:"unraid/bitwarden.md"};function p(o,e,n,c,l,s){return i(),r("div",null,e[0]||(e[0]=[t('<h1 id="开源的密码管理器-bitwarden" tabindex="-1">开源的密码管理器 - Bitwarden <a class="header-anchor" href="#开源的密码管理器-bitwarden" aria-label="Permalink to &quot;开源的密码管理器 - Bitwarden&quot;">​</a></h1><p>说起密码管理，我自己是多年的 1Password 老用户，1Password 在 Apple 生态内体验属于最佳，至今我还用着 7.x 的买断版本，同步也是用的 Dropbox。但新版的 1Password 现在也改成了订阅制，长期订阅的话也花费不菲。如果要找一款可靠的替代品，那 Bitwarden 是为数不多的选择。</p><p>Bitwarden 是一款开源的，支持 <a href="https://github.com/dani-garcia/vaultwarden" target="_blank" rel="noreferrer">自部署</a> 的跨平台密码管理器，官方的服务需要付费使用，如果你有一台 NAS，那么就可以自己部署一个 Bitwarden，可以免费使用还支持多账户，分享给家人和朋友一起使用也没问题。</p><p>自部署的好处是密码数据都加密存储在本地，数据泄露的风险会小很多。但使用自己部署 Bitwarden 一定要注意：做好数据备份并且知道如何从故障中恢复，因为 Bitwarden 里的数据几乎是你最重要的数据了。如果你保存了上百条的密码数据，有一天硬盘挂了，而你又没有任何备份，那手动找回上百个密码的画面想想都觉得酸爽！</p><h2 id="unraid-部署-bitwarden" tabindex="-1">Unraid 部署 Bitwarden <a class="header-anchor" href="#unraid-部署-bitwarden" aria-label="Permalink to &quot;Unraid 部署 Bitwarden&quot;">​</a></h2><p>在应用中心直接搜索 bitwarden，点击安装就可以。</p><p>默认数据文件都会保存到 <code>/mnt/user/appdata/vaultwarden</code>，这个也是你需要备份的目录，备份教程可以参考：<a href="https://slarker.me/unraid-backup-duplicati/" target="_blank" rel="noreferrer">开源免费的 Unraid 备份方案 - Duplicati</a>。</p><p>这里还需要设置个 <code>ADMIN_TOKEN</code>，也就是管理员密码，用来对 Bitwarden 的功能进行设置。管理页面地址是： http:// 你的 NAS IP : 端口/admin。启动后可以使用默认端口 4743 访问 Bitwarden 服务。</p><p><img src="https://img.slarker.me/wiki/qUIsLs_xk0AHF.png" alt="qUIsLs_xk0AHF"></p><h2 id="群晖部署-bitwarden" tabindex="-1">群晖部署 Bitwarden <a class="header-anchor" href="#群晖部署-bitwarden" aria-label="Permalink to &quot;群晖部署 Bitwarden&quot;">​</a></h2><p>建立一个用来存储 Bitwarden 数据的文件夹，比如 <code>/docker/bitwarden</code>，这个也就是需要备份的文件夹。</p><p>在群晖 Docker 中搜索 <code>vaultwarden/server</code> 镜像，下载并运行，只需要修改下面的设置就可以顺利启动容器了，启动后可以使用 8080 端口访问 Bitwarden 服务。</p><p><img src="https://img.slarker.me/wiki/a7bxi8_xrcbaS.png" alt="a7bxi8_xrcbaS"></p><p>Bitwarden 默认并不需要设置 ADMIN_TOKEN，如果你也想通过 Admin 来配置 Bitwarden 选项，可以在环境变量中加入 <code>ADMIN_TOKEN</code>。</p><p><img src="https://img.slarker.me/wiki/QpN2Ov_kKA3hY.png" alt="QpN2Ov_kKA3hY"></p><h2 id="添加-https-反向代理" tabindex="-1">添加 HTTPS 反向代理 <a class="header-anchor" href="#添加-https-反向代理" aria-label="Permalink to &quot;添加 HTTPS 反向代理&quot;">​</a></h2><p>为了保证传输安全，Bitwarden 不能通过 HTTP 直接访问，需要添加 HTTPS 证书。</p><p><img src="https://img.slarker.me/wiki/SKXCQl_zQwpf8.png" alt="SKXCQl_zQwpf8"></p><p>对于有公网 IP 的朋友，可以申请域名配合  <a href="https://github.com/gdy666/lucky" target="_blank" rel="noreferrer">Lucky</a> 来为 Bitwarden 添加 HTTPS 证书。</p><p>对于没有公网 IP 的朋友，可以直接使用我部署好的 Bitwarden 服务。如果你有需要，可以直接点击右上角的联系我，添加微信私聊。</p><h2 id="客户端设置" tabindex="-1">客户端设置 <a class="header-anchor" href="#客户端设置" aria-label="Permalink to &quot;客户端设置&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">提示</p><p>为了便于更新到最新版，Android 用户请尽量通过 <code>Google Play</code> 安装 Bitwarden。</p></div><p>Bitwarden 有浏览器插件（支持 Chrome，Safari，Edge 等主流浏览器），Windows、macOS、Android、iOS 客户端。</p><p>使用自建的 Bitwarden 服务需要填写托管的 <code>服务器 URL</code> 地址，以及注册的 <code>用户名</code>、<code>密码</code> 就可以登录。</p><p>如下图所示，选择登录到 <code>自托管</code>：</p><p><img src="https://img.slarker.me/wiki/16fb8c4ba2c34e7195d8b9858ee277c7.png" alt=""></p><p>填写 <code>服务器 URL</code>，点击保存：</p><p><img src="https://img.slarker.me/wiki/d6bbea162b014ed1a41a9ee6345e0997.png" alt=""></p><p>输入注册的 <code>电子邮件地址</code>，点击 <code>继续</code>：</p><p><img src="https://img.slarker.me/wiki/646ee0d068234f398bae964513ac0469.png" alt=""></p><p>输入密码后，选择 <code>使用主密码登录</code>。</p><p><img src="https://img.slarker.me/wiki/34e7ada4354f4a7db97b146916e57a24.png" alt=""></p><h2 id="自动填充" tabindex="-1">自动填充 <a class="header-anchor" href="#自动填充" aria-label="Permalink to &quot;自动填充&quot;">​</a></h2><p>推荐按下面的选项设置自动填充。</p><p><img src="https://img.slarker.me/wiki/e1134042eba34b3eb7ede2e6e52af536.png" alt=""></p><p>默认 URI 匹配检测设置为 <code>主机</code>，可以区分具有相同 IP，但端口不同的服务。</p><p><img src="https://img.slarker.me/wiki/8c3e56456c7b4236be6e7c51639da2a4.png" alt=""></p><h2 id="两步验证" tabindex="-1">两步验证 <a class="header-anchor" href="#两步验证" aria-label="Permalink to &quot;两步验证&quot;">​</a></h2><p>两步验证能增强你的账号安全性，如果你开启了两步验证，在新设备上登录你的账户时，会要求你额外输入两步验证 App 实时生成的两步验证码。</p><p>为了确保安全，请尽可能使用 <code>验证器 App</code> 开启两步登录验证，并妥善保管好或者单独记下你的 <code>恢复代码</code>。</p><p><img src="https://img.slarker.me/wiki/bb9ca895622d484e839efbeed2151f3c.png" alt=""></p><p><code>验证器 App</code> 推荐使用：</p><ul><li>微软的 Authenticator（国内应用市场可以直接下载）</li><li>Google Authenticator</li><li><a href="https://stratumauth.com/" target="_blank" rel="noreferrer">Authenticator Pro</a>（Android、开源）</li></ul><div class="info custom-block"><p class="custom-block-title">提示</p><p>如果你已经开启了两步验证，请尽可能使用下面的办法备份你的两步验证信息：</p><ul><li>如果你有闲置手机，你可以在多台手机上同时安装两步验证 App，并通过备份导入或者在线账户同步的方式，来确保在极端情况（主力手机丢失）下两步验证依然可用。</li><li>将两步验证的 <code>恢复代码</code> 手写/打印到纸上，妥善保管。</li></ul></div>',44)]))}const b=a(d,[["render",p]]);export{m as __pageData,b as default};
