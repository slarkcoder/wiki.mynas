import{_ as e,c as t,a2 as r,o as c}from"./chunks/framework.eme8ZeBJ.js";const k=JSON.parse('{"title":"反向代理工具 - Lucky","description":"","frontmatter":{},"headers":[],"relativePath":"basic/lucky.md","filePath":"basic/lucky.md","lastUpdated":1738849557000}'),o={name:"basic/lucky.md"};function l(s,a,i,n,d,u){return c(),t("div",null,a[0]||(a[0]=[r('<h1 id="反向代理工具-lucky" tabindex="-1">反向代理工具 - Lucky <a class="header-anchor" href="#反向代理工具-lucky" aria-label="Permalink to &quot;反向代理工具 - Lucky&quot;">​</a></h1><p>如果你有公网 IP（v4/v6），那么速度最快的远程访问方案肯定就是使用域名 + DDNS 直接连接了，其中涉及到 DDNS 域名绑定，端口转发，HTTPS 证书等等环节。在 Lucky 出现之前，你可能需要用到几个不同的工具互相配合，才能实现所有环节的功能。而有了 Lucky，你就可以把所有的功能都放到一个软件里面，降低了维护成本。其次，Lucky 可以利用域名反代功能，来隐藏你内网中的服务，避免暴露过多的端口，来降低安全风险。本篇教程就来介绍如何使用 Lucky。</p><h2 id="设置域名-ddns" tabindex="-1">设置域名 DDNS <a class="header-anchor" href="#设置域名-ddns" aria-label="Permalink to &quot;设置域名 DDNS&quot;">​</a></h2><h2 id="申请证书" tabindex="-1">申请证书 <a class="header-anchor" href="#申请证书" aria-label="Permalink to &quot;申请证书&quot;">​</a></h2><h2 id="设置端口转发" tabindex="-1">设置端口转发 <a class="header-anchor" href="#设置端口转发" aria-label="Permalink to &quot;设置端口转发&quot;">​</a></h2>',5)]))}const p=e(o,[["render",l]]);export{k as __pageData,p as default};
