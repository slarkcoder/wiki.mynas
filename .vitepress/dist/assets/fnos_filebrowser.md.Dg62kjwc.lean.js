import{_ as i,c as a,a2 as e,o as t}from"./chunks/framework.eme8ZeBJ.js";const c=JSON.parse('{"title":"第三方文件管理器 - FileBrowser","description":"","frontmatter":{},"headers":[],"relativePath":"fnos/filebrowser.md","filePath":"fnos/filebrowser.md","lastUpdated":1725950706000}'),l={name:"fnos/filebrowser.md"};function n(p,s,h,r,o,k){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="第三方文件管理器-filebrowser" tabindex="-1">第三方文件管理器 - FileBrowser <a class="header-anchor" href="#第三方文件管理器-filebrowser" aria-label="Permalink to &quot;第三方文件管理器 - FileBrowser&quot;">​</a></h1><p><img src="https://img.slarker.me/wiki/202409101416339.jpg" alt=""></p><p>虽然 fnOS 自带的文件管理器比较好用，但依然有一些功能是缺失的，比如无法管理共享文件夹之外的文件，只能分享给系统内的其他用户，无法生成分享链接等等。要想使用这些功能，可以安装第三方的文件管理器 <a href="https://github.com/filebrowser/filebrowser" target="_blank" rel="noreferrer">filebrowser</a> 来解决。</p><h2 id="数据库和配置文件" tabindex="-1">数据库和配置文件 <a class="header-anchor" href="#数据库和配置文件" aria-label="Permalink to &quot;数据库和配置文件&quot;">​</a></h2><p>按下图所示在 <code>docker</code> 文件夹里新建 <code>filebrowser</code> 文件夹：</p><p><img src="https://img.slarker.me/wiki/202409101423668.png" alt=""></p><p><a href="/fnos/ssh.html">使用 SSH 登录</a> fnOS，并切换到 <code>root</code> 用户。进入到 <code>filebrowser</code> 文件夹：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /vol1/1000/docker/filebrowser</span></span></code></pre></div><p>创建数据库文件：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> filebrowser.db</span></span></code></pre></div><p>创建配置文件：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{&quot;port&quot;: 80, &quot;baseURL&quot;: &quot;&quot;, &quot;address&quot;: &quot;&quot;, &quot;log&quot;: &quot;stdout&quot;, &quot;database&quot;: &quot;/database/filebrowser.db&quot;, &quot;root&quot;: &quot;/srv&quot;}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> settings.json</span></span></code></pre></div><h2 id="建立容器" tabindex="-1">建立容器 <a class="header-anchor" href="#建立容器" aria-label="Permalink to &quot;建立容器&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">提示</p><p>如果需要将多个存储池或者磁盘挂载到 filebrowser，可以添加多个 <code>-v</code> 参数。比如 <code>-v /vol1:/srv/vol1 -v /vol2:/srv/vol2</code>。如果命令需要换行，注意在行末尾添加 <code>\\</code>。</p></div><p>可以使用 下面的命令来创建容器：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --restart=always</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --name=filebrowser</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /vol1:/srv/vol1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /vol1/1000/docker/filebrowser/filebrowser.db:/database/filebrowser.db</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /vol1/1000/docker/filebrowser/settings.json:/config/settings.json</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PUID=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">id</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PGID=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">id</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8080:80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    filebrowser/filebrowser:s6</span></span></code></pre></div><p>建好容器之后，可以使用 <code>fnOS IP:8080</code> 访问 <code>filebrowser</code>。</p><ul><li>默认端口：8080</li><li>默认用户名/密码：admin/admin</li></ul><h2 id="效果预览" tabindex="-1">效果预览 <a class="header-anchor" href="#效果预览" aria-label="Permalink to &quot;效果预览&quot;">​</a></h2><p>使用 filebrowser 可以生成分享链接，方便快速分享文件给朋友：</p><p><img src="https://img.slarker.me/wiki/202409101440103.png" alt=""></p><p>可以管理共享文件夹之外的文件：</p><p><img src="https://img.slarker.me/wiki/202409101431542.png" alt=""></p><p>支持添加多个存储池或者磁盘：</p><p><img src="https://img.slarker.me/wiki/202409101432543.png" alt=""></p>`,25)]))}const F=i(l,[["render",n]]);export{c as __pageData,F as default};
